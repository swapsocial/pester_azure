name: Azure IQ Testing with Pester

on:
  push:
    branches:
      - main

jobs:
  run-pester-tests:
    runs-on: windows-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install Azure PowerShell (Az module)
        run: |
          if (-not (Get-Module -ListAvailable -Name Az)) {
              Install-Module -Name Az -Force -AllowClobber -SkipPublisherCheck
          }

      - name: Log in to Azure using Service Principal
        run: |
          # $tenantId = "${{ secrets.AZURE_TENANT_ID }}"
          # $clientId = "${{ secrets.AZURE_CLIENT_ID }}"
          # $clientSecret = "${{ secrets.AZURE_CLIENT_SECRET }}"

          $tenantId = "22354037-4283-4747-9f8f-a18b213d4254"
          $clientId = "e6e68caf-3511-4944-bece-603dd3cb3552"
          $clientSecret = "ANk8Q~kHTBz~I1xtQLqBZxsC_44ZjzoCUPBAYbIv"

          $secureSecret = ConvertTo-SecureString $clientSecret -AsPlainText -Force
          $credentials = New-Object System.Management.Automation.PSCredential($clientId, $secureSecret)

          Connect-AzAccount -ServicePrincipal -TenantId $tenantId -ApplicationId $clientId -Credential $credentials

      - name: Install Pester module
        run: |
          if (-not (Get-Module -ListAvailable -Name Pester)) {
              Install-Module -Name Pester -Force -SkipPublisherCheck
          }

      - name: Run Pester Tests
        continue-on-error: true
        run: |
          $subscriptionId = "0b7e0b83-0035-48fe-92fe-bf1143f2e715"
          Set-AzContext -SubscriptionId $subscriptionId
          Invoke-Pester -Script .\az-tests\azure_pester.ps1
        shell: pwsh
